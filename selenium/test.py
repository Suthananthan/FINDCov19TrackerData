# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.options import Options
from datetime import date
import unittest

class TestDefaultSuite(unittest.TestCase):
  def setUp(self):
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    # Required for test_france() to work
    # https://stackoverflow.com/questions/51220794/selenium-not-working-in-headless-mode
    # https://sqa.stackexchange.com/questions/33778/chromedriver-in-headless-mode-doesnt-work-correctly-because-of-windows-user-pol
    chrome_options.add_argument("--window-size=3020,1580") # With this size African countries work
    self.driver = webdriver.Chrome(chrome_options=chrome_options)
    # set load timeout: https://stackoverflow.com/questions/36026676/python-selenium-timeout-exception-catch
    self.driver.set_page_load_timeout(10)
    #self.driver = webdriver.Chrome()
    self.vars = {}
    # FIXME: The data needs to be included
    # self.vars["date"] = date.today().strftime("%Y-%m-%d")

  def tearDown(self):
    self.driver.quit()

  def test_australia(self):
    # Test name: Australia
    # Step # | name | target | value
    # 1 | open | https://www.health.gov.au/resources/total-covid-19-tests-conducted-and-results |
    self.driver.get("https://www.health.gov.au/resources/total-covid-19-tests-conducted-and-results")
    # 2 | waitForElementNotPresent | css=.ng-scope:nth-child(1) > .ng-binding:nth-child(2) | 60
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".ng-scope:nth-child(1) > .ng-binding:nth-child(2)")))
    # 3 | storeText | css=.ng-scope:nth-child(1) > .ng-binding:nth-child(2) | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(1) > .ng-binding:nth-child(2)").text
    # 4 | close |  |
    self.driver.close()

  def test_bosniaandHerzegovina(self):
    # Test name: BosniaandHerzegovina
    # Step # | name | target | value
    # 1 | open | https://covid-19.ba/ |
    self.driver.get("https://covid-19.ba/")
    # 2 | waitForElementVisible | id=total_tested_positive | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.ID, "total_tested_positive")))
    # 3 | storeText | id=total_tested_positive | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.ID, "total_tested_positive").text
    # 4 | close |  |
    self.driver.close()

  def test_brunei(self):
    # Test name: Brunei
    # Step # | name | target | value
    # 1 | open | http://www.moh.gov.bn/Lists/Latest%20news/AllItems.aspx |
    self.driver.get("http://www.moh.gov.bn/Lists/Latest%20news/AllItems.aspx")
    # 2 | click | css=.ms-listlink:nth-of-type(1) |
    self.driver.find_element(By.CSS_SELECTOR, ".ms-listlink:nth-of-type(1)").click()
    # 3 | waitForElementVisible | css=.ms-rteTable-default:nth-child(17) .ms-rteTable-default:nth-child(2) > strong | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".ms-rteTable-default:nth-child(17) .ms-rteTable-default:nth-child(2) > strong")))
    # 4 | storeText | css=.ms-rteTable-default:nth-child(17) .ms-rteTable-default:nth-child(2) > strong | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".ms-rteTable-default:nth-child(17) .ms-rteTable-default:nth-child(2) > strong").text
    # 5 | close |  |
    self.driver.close()

  def test_canada(self):
    # Test name: Canada
    # Step # | name | target | value
    # 1 | open | https://health-infobase.canada.ca/covid-19/epidemiological-summary-covid-19-cases.html |
    self.driver.get("https://health-infobase.canada.ca/covid-19/epidemiological-summary-covid-19-cases.html")
    # 2 | waitForElementVisible | css=.numTested | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".numTested")))
    # 3 | storeText | css=.numTested | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".numTested").text
    # 4 | close |  |
    self.driver.close()

  def test_estonia(self):
    # Test name: Estonia
    # Step # | name | target | value
    # 1 | open | https://koroonakaart.ee/et |
    self.driver.get("https://koroonakaart.ee/et")
    time.sleep(90)
    # 2 | waitForElementVisible | css=.row:nth-child(2) > .statsbar-item:nth-child(4) > h1 | 60
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".row:nth-child(2) > .statsbar-item:nth-child(4) > h1")))
    # 3 | storeText | css=.row:nth-child(2) > .statsbar-item:nth-child(4) > h1 | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(2) > .statsbar-item:nth-child(4) > h1").text
    # 4 | close |  |
    self.driver.close()

  def test_france(self):
    # Test name: France
    # Step # | name | target | value
    # 1 | open | https://dashboard.covid19.data.gouv.fr/suivi-des-tests?location=FRA |
    self.driver.get("https://dashboard.covid19.data.gouv.fr/suivi-des-tests?location=FRA")
    # 2 | waitForElementVisible | css=.counter-container > .jsx-792689997 | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".counter-container > .jsx-792689997")))
    # 3 | storeText | css=.counter-container > .jsx-792689997 | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".counter-container > .jsx-792689997").text
    # 4 | close |  |
    self.driver.close()

  def test_hungary(self):
    # Test name: Hungary
    # Step # | name | target | value
    # 1 | open | https://koronavirus.gov.hu/#aktualis |
    self.driver.get("https://koronavirus.gov.hu/#aktualis")
    # 2 | waitForElementVisible | id=content-mintavetel | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.ID, "content-mintavetel")))
    # 3 | storeText | id=content-mintavetel | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.ID, "content-mintavetel").text
    # 4 | close |  |
    self.driver.close()

  def test_india(self):
    # Test name: India
    # Step # | name | target | value
    # 1 | open | https://www.icmr.gov.in/ |
    self.driver.get("https://www.icmr.gov.in/")
    # 2 | waitForElementVisible | css=.col-12:nth-child(1) > .single-cool-fact h2 | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".col-12:nth-child(1) > .single-cool-fact h2")))
    # 3 | storeText | css=.col-12:nth-child(1) > .single-cool-fact h2 | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".col-12:nth-child(1) > .single-cool-fact h2").text
    # 4 | close |  |
    self.driver.close()

  def test_ireland(self):
    # Test name: Ireland
    # Step # | name | target | value
    # 1 | open | https://covid19ireland-geohive.hub.arcgis.com/pages/hospitals-icu--testing |
    self.driver.get("https://covid19ireland-geohive.hub.arcgis.com/pages/hospitals-icu--testing")
    # 2 | waitForElementVisible | css=#ember142 .ss-value | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#ember142 .ss-value")))
    # 3 | storeText | css=#ember142 .ss-value | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "#ember142 .ss-value").text
    # 4 | close |  |
    self.driver.close()

  def test_latvia(self):
    # Test name: Latvia
    # Step # | name | target | value
    # 1 | open | https://infogram.com/covid-19-izplatiba-latvija-1hzj4ozwvnzo2pw |
    self.driver.get("https://infogram.com/covid-19-izplatiba-latvija-1hzj4ozwvnzo2pw")
    # 2 | waitForElementVisible | css=.InfographicEditor-Contents-Item:nth-child(11) .igc-textual-figure > div | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".InfographicEditor-Contents-Item:nth-child(11) .igc-textual-figure > div")))
    # 3 | storeText | css=.InfographicEditor-Contents-Item:nth-child(11) .igc-textual-figure > div | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".InfographicEditor-Contents-Item:nth-child(11) .igc-textual-figure > div").text
    # 4 | close |  |
    self.driver.close()

  def test_lithuania(self):
    # Test name: Lithuania
    # Step # | name | target | value
    # 1 | open | https://osp.stat.gov.lt/praejusios-paros-covid-19-statistika |
    self.driver.get("https://osp.stat.gov.lt/praejusios-paros-covid-19-statistika")
    # 2 | waitForElementVisible | css=tr:nth-child(13) > td:nth-child(1) span > span | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "tr:nth-child(13) > td:nth-child(1) span > span")))
    # 3 | storeText | css=tr:nth-child(13) > td:nth-child(1) span > span | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(13) > td:nth-child(1) span > span").text
    # 4 | close |  |
    self.driver.close()

  def test_nepal(self):
    # Test name: Nepal
    # Step # | name | target | value
    # 1 | open | https://covid19.mohp.gov.np/ |
    self.driver.get("https://covid19.mohp.gov.np/")
    # 2 | waitForElementVisible | css=.ant-col-md-24 .ant-typography:nth-child(2) | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".ant-col-md-24 .ant-typography:nth-child(2)")))
    # 3 | storeText | css=.ant-col-md-24 .ant-typography:nth-child(2) | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".ant-col-md-24 .ant-typography:nth-child(2)").text
    # 4 | close |  |
    self.driver.close()

  def test_newZealand(self):
    # Test name: NewZealand
    # Step # | name | target | value
    # 1 | open | https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-data-and-statistics/covid-19-testing-data |
    self.driver.get("https://www.health.govt.nz/our-work/diseases-and-conditions/covid-19-novel-coronavirus/covid-19-data-and-statistics/covid-19-testing-data")
    # 2 | waitForElementVisible | css=.table-responsive:nth-child(9) tr:nth-child(1) > td | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".table-responsive:nth-child(9) tr:nth-child(1) > td")))
    # 3 | storeText | css=.table-responsive:nth-child(9) tr:nth-child(1) > td | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".table-responsive:nth-child(9) tr:nth-child(1) > td").text
    # 4 | close |  |
    self.driver.close()

  def test_northMacedonia(self):
    # Test name: NorthMacedonia
    # Step # | name | target | value
    # 1 | open | https://datastudio.google.com/embed/u/0/reporting/9f5104d0-12fd-4e16-9a11-993685cfd40f/page/1M |
    self.driver.get("https://datastudio.google.com/embed/u/0/reporting/9f5104d0-12fd-4e16-9a11-993685cfd40f/page/1M")
    # 2 | waitForElementVisible | css=.cd-vmd90p9a8b .valueLabel | 60
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".cd-vmd90p9a8b .valueLabel")))
    # 3 | storeText | css=.cd-vmd90p9a8b .valueLabel | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".cd-vmd90p9a8b .valueLabel").text
    # 4 | close |  |
    self.driver.close()

  def test_norway(self):
    # Test name: Norway
    # Step # | name | target | value
    # 1 | open | https://www.fhi.no/en/id/infectious-diseases/coronavirus/daily-reports/daily-reports-COVID19/ |
    self.driver.get("https://www.fhi.no/en/id/infectious-diseases/coronavirus/daily-reports/daily-reports-COVID19/")
    # 2 | waitForElementVisible | css=.c-key-figure:nth-child(1) .c-key-figure__number > span | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".c-key-figure:nth-child(1) .c-key-figure__number > span")))
    # 3 | storeText | css=.c-key-figure:nth-child(1) .c-key-figure__number > span | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".c-key-figure:nth-child(1) .c-key-figure__number > span").text
    # 4 | close |  |
    self.driver.close()

  def test_occupiedPalestinianTerritory(self):
    # Test name: occupiedPalestinianterritory
    # Step # | name | target | value
    # 1 | open | https://corona.ps/ |
    self.driver.get("https://corona.ps/")
    # 2 | waitForElementVisible | css=.roundbox:nth-child(1) > div:nth-child(2) | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".roundbox:nth-child(1) > div:nth-child(2)")))
    # 3 | storeText | css=.roundbox:nth-child(1) > div:nth-child(2) | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".roundbox:nth-child(1) > div:nth-child(2)").text
    # 4 | close |  |
    self.driver.close()

  def test_qatar(self):
    # Test name: Qatar
    # Step # | name | target | value
    # 1 | open | https://covid19.moph.gov.qa/EN/Pages/default.aspx# |
    self.driver.get("https://covid19.moph.gov.qa/EN/Pages/default.aspx#")
    # 2 | waitForElementVisible | id=strgPeopleTested | 60
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.ID, "strgPeopleTested")))
    # 3 | storeText | id=strgPeopleTested | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.ID, "strgPeopleTested").text
    # 4 | close |  |
    self.driver.close()

  def test_republicofKorea(self):
    # Test name: RepublicofKorea
    # Step # | name | target | value
    # 1 | open | http://ncov.mohw.go.kr/en/ |
    self.driver.get("http://ncov.mohw.go.kr/en/")
    # 2 | waitForElementVisible | css=li:nth-child(1) > .misil_r > span | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "li:nth-child(1) > .misil_r > span")))
    # 3 | storeText | css=li:nth-child(1) > .misil_r > span | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(1) > .misil_r > span").text
    # 4 | close |  |
    self.driver.close()

  def test_southAfrica(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'South Africa':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()


  def test_singapore(self):
    # Test name: Singapore
    # Step # | name | target | value
    # 1 | open | https://www.moh.gov.sg/covid-19 |
    self.driver.get("https://www.moh.gov.sg/covid-19")
    # 2 | waitForElementVisible | css=#ContentPlaceHolder_contentPlaceholder_C095_Col00 b | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#ContentPlaceHolder_contentPlaceholder_C095_Col00 b")))
    # 3 | storeText | css=#ContentPlaceHolder_contentPlaceholder_C095_Col00 b | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "#ContentPlaceHolder_contentPlaceholder_C095_Col00 b").text
    # 4 | close |  |
    self.driver.close()

  def test_slovakia(self):
    # Test name: Slovakia
    # Step # | name | target | value
    # 1 | open | https://korona.gov.sk/ |
    self.driver.get("https://korona.gov.sk/")
    # 2 | waitForElementVisible | css=#block_5e9990e25ffff .govuk-heading-l | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#block_5e9990e25ffff .govuk-heading-l")))
    # 3 | storeText | css=#block_5e9990e25ffff .govuk-heading-l | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "#block_5e9990e25ffff .govuk-heading-l").text
    # 4 | close |  |
    self.driver.close()

  def test_sriLanka(self):
    # Test name: SriLanka
    # Step # | name | target | value
    # 1 | open | https://www.hpb.health.gov.lk/en |
    self.driver.get("https://www.hpb.health.gov.lk/en")
    # 2 | waitForElementVisible | css=.total-count | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".total-count")))
    # 3 | storeText | css=.total-count | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".total-count").text
    # 4 | close |  |
    self.driver.close()

  def test_turkey(self):
    # Test name: Turkey
    # Step # | name | target | value
    # 1 | open | https://covid19.saglik.gov.tr/ |
    self.driver.get("https://covid19.saglik.gov.tr/")
    # 2 | waitForElementVisible | css=.toplam-test-sayisi | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".toplam-test-sayisi")))
    # 3 | storeText | css=.toplam-test-sayisi | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".toplam-test-sayisi").text
    # 4 | close |  |
    self.driver.close()

  def test_unitedArabEmirates(self):
    # Test name: UnitedArabEmirates
    # Step # | name | target | value
    # 1 | open | https://fcsa.gov.ae/en-us/Pages/Covid19/UAE-Covid-19-Updates.aspx |
    self.driver.get("https://fcsa.gov.ae/en-us/Pages/Covid19/UAE-Covid-19-Updates.aspx")
    # 2 | waitForElementVisible | css=.total_tests > .numbers | 600
    time.sleep(60)
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".total_tests > .numbers")))
    # 3 | storeText | css=.total_tests > .numbers | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".total_tests > .numbers").text
    # 4 | close |  |
    self.driver.close()

  def test_unitedKingdom(self):
    # Test name: UnitedKingdom
    # Step # | name | target | value
    # 1 | open | https://coronavirus.data.gov.uk/testing |
    self.driver.get("https://coronavirus.data.gov.uk/testing")
    # 2 | waitForElementVisible | id=value-item-virus_tests_conducted-total-cumvirustests-1_modal | 600
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.ID, "value-item-virus_tests_conducted-total-cumvirustests-1_modal")))
    # 3 | storeText | id=value-item-virus_tests_conducted-total-cumvirustests-1_modal | tests
    self.vars["tests_cumulative"] = self.driver.find_element(By.ID, "value-item-virus_tests_conducted-total-cumvirustests-1_modal").text
    # 4 | close |  |
    self.driver.close()

  def test_algeria(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Algeria':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_angola(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Angola':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_benin(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Benin':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_botswana(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Botswana':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_burkinaFaso(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Burkina Faso':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_burundi(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Burundi':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_cameroon(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Cameroon':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_capeVerde(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Cabo Verde':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_centralAfricanRepublic(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Central African Republic':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_chad(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Chad':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_comoros(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == 'Comoros':
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_cotedIvoire(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Cote d'Ivoire":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_democraticRepublicoftheCongo(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Democratic Republic of the Congo":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_djibouti(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Djibouti":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_egypt(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Egypt":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_equatorialGuinea(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Equatorial Guinea":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_eritrea(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Eritrea":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_eswatini(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Eswatini":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_ethiopia(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Ethiopia":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_gabon(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Gabon":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_ghana(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Ghana":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_guinea(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Guinea":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_guineaBissau(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Guinea Bissau":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_kenya(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Kenya":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_lesotho(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Lesotho":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_liberia(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Liberia":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_libya(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Libya":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_madagascar(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Madagascar":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_malawi(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Malawi":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_mali(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Mali":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_mauritania(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Mauritania":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_mauritius(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Mauritius":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_morocco(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Morocco":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_mozambique(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Mozambique":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_namibia(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Namibia":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_niger(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Niger":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_nigeria(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Nigeria":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_congo(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Republic of the Congo":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_rwanda(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Rwanda":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_saoTomeandPrincipe(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Sao Tome and Principe":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_senegal(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Senegal":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_seychelles(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Seychelles":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_sierraLeone(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Sierra Leone":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_somalia(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Somalia":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_southsudan(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "South Sudan":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_sudan(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Sudan":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_thegambia(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Gambia":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_togo(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Togo":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_tunisia(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Tunisia":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_uganda(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Uganda":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_unitedrepublicoftanzania(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Tanzania":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_westernSahara(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Western Sahara":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_zambia(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Zambia":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_zimbabwe(self):
    self.driver.get("https://africacdc.maps.arcgis.com/apps/opsdashboard/index.html#/9d8d4add4dcb456997fd83607b5d0c7c")
    continent = WebDriverWait(self.driver, 40).until(expected_conditions.presence_of_element_located((By.ID, "Dashboard_1day_Sht1_5411_layer")))
    all_countries = self.driver.find_elements_by_tag_name('circle')
    final_tests = ""
    for country in all_countries:
        try:
            country.click()
            temp_name = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(2)").text
            if temp_name == "Zimbabwe":
                final_tests = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) .esriNumericValue").text
                break
            else:
                self.driver.find_element_by_id('esri.Map_0_gc').click()
        except:
            pass

    self.vars["tests_cumulative"] = final_tests
    self.driver.close()
    self.driver.quit()

  def test_chile(self):
    self.driver.get("https://www.gob.cl/coronavirus/cifrasoficiales/")
    time.sleep(60)
    self.driver.switch_to.frame(0)
    self.vars["tests_cumulative"] = self.driver.find_element(By.XPATH, "//*[@id=\"106fdff4-b841-4389-a4bf-7541e6143abd\"]/div[1]/div/div[67]/div/div/div/div/div/div/div/div/div/h2/div/span/span").text
    self.driver.close()

  def test_czechia(self):
    self.driver.get("https://onemocneni-aktualne.mzcr.cz/covid-19")
    WebDriverWait(self.driver, 40).until(expected_conditions.visibility_of_element_located((By.ID, "count-test")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.ID, "count-test").text
    self.driver.close()

  def test_ecuador(self):
    self.driver.get("https://www.salud.gob.ec/actualizacion-de-casos-de-coronavirus-en-ecuador/")
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "tr:nth-child(1) p:nth-child(1)")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) strong:nth-child(1)").text
    self.driver.close()

  def test_saintLucia(self):
    self.driver.get("https://www.covid19response.lc/")
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#w-tabs-0-data-w-tab-0 > div")))
    self.driver.find_element(By.CSS_SELECTOR, "#w-tabs-0-data-w-tab-0 > div").click()
    self.driver.find_element(By.CSS_SELECTOR, ".wrapper:nth-child(9) > .yellow").click()
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".test-stlucia").text
    self.driver.close()

  def test_iceland(self):
    self.driver.get("https://www.covid.is/tolulegar-upplysingar")
    self.driver.switch_to.frame(0)
    WebDriverWait(self.driver, 90).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".InfographicEditor-Contents-Item:nth-child(16) span")))
    self.driver.find_element(By.CSS_SELECTOR, ".InfographicEditor-Contents-Item:nth-child(16) span").click()
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".InfographicEditor-Contents-Item:nth-child(16) span").text
    self.driver.close()

  def test_bermuda(self):
    self.driver.get("https://www.gov.bm/coronavirus-covid19-update")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "tr:nth-child(2) > td:nth-child(2)")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > td:nth-child(2)").text
    self.driver.close()

  def test_bulgaria(self):
    self.driver.get("https://coronavirus.bg/")
    time.sleep(60)
    WebDriverWait(self.driver, 60).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".col-lg-3:nth-child(1) > .statistics-value")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".col-lg-3:nth-child(1) > .statistics-value").text
    self.driver.close()

  def test_croatia(self):
    self.driver.get("https://www.koronavirus.hr/najnovije/ukupno-dosad-382-zarazene-osobe-u-hrvatskoj/35")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "content")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.ID, "content").text
    self.vars["tests_cumulative"] = self.vars["tests_cumulative"].split('Do danas je ukupno testirano ')[1].split('osoba')[0]
    self.driver.close()

  def test_faroeIslands(self):
    self.driver.get("https://corona.fo/?_l=en")
    self.vars["tests"] = self.driver.find_element(By.XPATH, "//*[@id=\"ease_flexibleitem_9\"]/grid[2]/column/grid[1]/column[5]/div[1]").text
    self.driver.close()

  def test_finland(self):
    self.driver.get("https://thl.fi/fi/web/infektiotaudit-ja-rokotukset/ajankohtaista/ajankohtaista-koronaviruksesta-covid-19/tilannekatsaus-koronaviruksesta")
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(2) > strong").text
    self.driver.close()

  def test_greenland(self):
    self.driver.get("https://nun.gl/emner/borgere/coronavirus_emne/foelg_smittespredningen?sc_lang=da")
    self.vars["tests_cumulative"] = self.driver.find_element(By.XPATH, "//table[@id=\'covid_19\']/tbody/tr/td[2]").text
    self.driver.close()

  def test_guatemala(self):
    self.driver.get("https://gtmvigilanciacovid.shinyapps.io/3869aac0fb95d6baf2c80f19f2da5f98")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".sidebar-menu")))
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(2) span").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#casosSospechososValueBox h3")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "#casosSospechososValueBox h3").text
    self.driver.close()

  def test_indonesia(self):
    self.driver.get("https://covid19.disiplin.id")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".global-area:nth-child(3) > .text-danger:nth-child(1)")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".global-area:nth-child(3) > .text-danger:nth-child(1)").text
    self.driver.close()

  def test_jamaica(self):
    self.driver.get("https://www.moh.gov.jm/?s=COVID-19+Clinical+Management+Summary")
    self.driver.find_element(By.CSS_SELECTOR, "article:nth-child(1) > header > h2 > a").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(25) > .gen10f2c:nth-child(3) .Table_0020Grid__Char").click()
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(25) > .gen10f2c:nth-child(3) .Table_0020Grid__Char").text
    self.driver.close()

  def test_japan(self):
    self.driver.get("https://www.mhlw.go.jp/stf/covid-19/kokunainohasseijoukyou.html")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//div[@id=\'current_situation\']/table/tbody//th[contains(text(), \'国内事例\')]/following-sibling::td[1]")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.XPATH, "//div[@id=\'current_situation\']/table/tbody//th[contains(text(), \'国内事例\')]/following-sibling::td[1]").text
    self.vars["tests_cumulative"] = self.vars["tests_cumulative"].split('\n')[0]
    self.driver.close()

  def test_cyprus(self):
    #self.driver.get("https://covid19.ucy.ac.cy/")
    #time.sleep(90)
    #self.driver.switch_to.frame(0)
    # only new tests daily
    #self.vars["tests_daily"] = self.driver.find_element(By.CSS_SELECTOR, "#pvExplorationHost > div > div > exploration > div > explore-canvas-modern > div > div.canvasFlexBox > div > div.displayArea.disableAnimations.fitToWidthOrigin > div.visualContainerHost > visual-container-repeat > visual-container-modern:nth-child(31) > transform > div > div:nth-child(22) > div > visual-modern > div > svg > g:nth-child(1) > text > tspan").text
    #self.driver.close()

  def test_ukraine(self):
    self.driver.get("https://covid19.gov.ua/en/")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".one-field:nth-child(6) > .field-value")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".one-field:nth-child(6) > .field-value").text
    self.driver.close()

  def test_switzerland(self):
    self.driver.get("https://www.covid19.admin.ch/en/overview?ovTime=total")
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".bag-key-value-list__combine-below:nth-child(2) .bag-key-value-list__entry-value").text
    self.driver.close()

  def test_taiwan(self):
    self.driver.get("https://sites.google.com/cdc.gov.tw/2019-ncov/taiwan")
    self.driver.switch_to.frame(1)
    self.driver.switch_to.frame(0)
    self.driver.switch_to.frame(0)
    time.sleep(15)
    self.vars["tests_cumulative"] = self.driver.execute_script("x = document.getElementById(\'num9\').textContent; return x;")
    self.driver.close()

  def test_uS(self):
    self.driver.get("https://covidtracking.com/data#ME")
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".\\_2862e > .\\_90f4f:nth-child(2) .\\_91774 .c4015").text
    self.driver.close()

  def test_armenia(self):
    self.driver.get("https://infogram.com/--1h7j4drmogk92nr")
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".\\__ig-alignLeft:nth-child(4) span > span").text
    self.driver.close()

  def test_austria(self):
    self.driver.get("https://www.sozialministerium.at/Informationen-zum-Coronavirus/Neuartiges-Coronavirus-(2019-nCov).html")
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(6) > td:nth-child(11)").text
    self.driver.close()

  def test_azerbaijan(self):
    self.driver.get("https://koronavirusinfo.az/az/page/statistika/azerbaycanda-cari-veziyyet")
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".gray_little_statistic:nth-child(6) > strong").text
    self.driver.close()

  def test_bangladesh(self):
    self.driver.get("https://corona.gov.bd/")
    self.driver.find_element(By.CSS_SELECTOR, ".close > span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".lang-btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".close > span").click()
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".live-update-box-body-three .text-right b").text
    self.driver.close()

  def test_spain(self):
    self.driver.get("https://www.mscbs.gob.es/gabinete/notasPrensa.do")
    WebDriverWait(self.driver, 30).until(expected_conditions.element_to_be_clickable((By.XPATH, "//*[contains(text(), \"España ha realizado más de\")]/parent::p/a")))
    url = self.driver.find_element(By.XPATH, "//*[contains(text(), \"España ha realizado más de\")]/parent::p/a").get_attribute('href')
    self.driver.get(url)
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//h2")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.XPATH, "//section//div[3]//p[1]").text
    self.vars["tests_cumulative"] = self.vars["tests"].split('cabo un total de')[-1].strip().split(' ')[0].strip()
    self.driver.close()

  def test_antiguaandBarbuda(self):
    self.driver.get("https://covid19.gov.ag")
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".icon-test-done > .case-Number").text
    self.driver.close()
  
  def test_albania(self):
    self.driver.get("https://new.shendetesia.gov.al/?s=COVID19%2F+Ministria+e+Sh%C3%ABndet%C3%ABsis%C3%AB%3A")
    time.sleep(90)
    url = self.driver.find_element(By.XPATH, "//a[contains(text(),\'COVID19/ Ministria e Shëndetësisë\')]").get_attribute('href')
    self.driver.get(url)
    time.sleep(90)
    self.vars["tests_cumulative"] = self.driver.find_element(By.XPATH, "//div//div[3]//div[4]//p[contains(text(), \"Testime totale \")][1]").text
    self.vars["tests_cumulative"] = self.vars["tests_cumulative"].split('Testime totale ')[-1].strip().split(' ')[0].strip().split('\n')[0]
    self.driver.close()
    
  def test_bahrain(self):
    self.driver.get("https://healthalert.gov.bh/en/")
    time.sleep(60)
    self.vars["tests_cumulative"] = self.driver.find_element(By.XPATH, "//div[1]/div/div[1]/div/ul/li/div[2]/div/span").text
    self.driver.close()
  
  def test_belarus(self):
    self.driver.get("http://stopcovid.belta.by/")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#rec266847794 .t-animate__chain_first-in-row > .t192__title")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, "#rec266847794 .t-animate__chain_first-in-row > .t192__title").text
    self.driver.close()
    
  def test_belgium(self):
    self.driver.get("https://datastudio.google.com/embed/u/0/reporting/c14a5cfc-cab7-4812-848c-0369173148ab/page/cUWaB")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".cd-345jc65scc .valueLabel")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".cd-345jc65scc .valueLabel").text
    self.driver.close()
    
  def test_belize(self):
    self.driver.get("https://sib.org.bz/covid-19/by-the-numbers/")
    time.sleep(90)
    WebDriverWait(self.driver, 60).until(expected_conditions.visibility_of_element_located((By.ID, "content")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.ID, "content").text
    self.vars["tests_cumulative"] = self.vars["tests_cumulative"].split('outbreak situation\n')[1].split('\nTests Completed')[0]
    self.driver.close()    
  
  def test_brazil(self):
    self.driver.get("https://viz.saude.gov.br/extensions/DEMAS_C19Insumos_TESTES/DEMAS_C19Insumos_TESTES.html")
    self.driver.find_element_by_id('KPI-01')
    self.vars["tests_cumulative"] = self.driver.find_element(By.XPATH, "//div//article").text.split('\n')[1]
    self.driver.close()
    
  def test_denmark(self):
    self.driver.get("https://www.sst.dk/en/english/corona-eng/status-of-the-epidemic/covid-19-updates-statistics-and-charts")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".table-responsive:nth-child(7) tr:nth-child(2) > td:nth-child(2)")))
    self.vars["tests_cumulative"] = self.driver.find_element(By.CSS_SELECTOR, ".table-responsive:nth-child(7) tr:nth-child(2) > td:nth-child(2) > span").text
    self.driver.close()

